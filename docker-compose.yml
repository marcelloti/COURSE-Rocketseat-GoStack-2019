version: "3"
services:
  node-and-vscode:
    stdin_open: true
    tty: true
    container_name: node-and-vscode
    restart: "no"
    image: marcellocosta/node-and-vscode
    environment:
        DISPLAY: ":0"
    volumes:
    #    - "$HOME/.Xauthority:/root/.Xauthority:rw"
        - "./developer:/home/developer"
    network_mode: "host"
    build:
        dockerfile: DockerfileVSCode
        context: .
        
  postbird:
    stdin_open: true
    tty: true
    container_name: postbird
    restart: "no"
    image: marcellocosta/postbird
    environment:
        DISPLAY: ":0"
    volumes:
    #    - "$HOME/.Xauthority:/root/.Xauthority:rw"
        - "./developer:/home/developer"
    network_mode: "host"
    build:
        dockerfile: DockerfilePostbird
        context: .
        
  #insomnia:
  #  stdin_open: true
  #  tty: true
  #  container_name: insomnia
  #  restart: "no"
  #  image: marcellocosta/insomnia
  #  environment:
  #      DISPLAY: ":0"
  #  volumes:
  #  #    - "$HOME/.Xauthority:/root/.Xauthority:rw"
  #      - "./developer:/home/developer"
  #  network_mode: "host"
  #  build:
  #      dockerfile: DockerfileInsomnia
  #      context: .
  
  redis:
    image: redis:alpine
    command: redis-server
    ports:
      - "6379:6379"
    network_mode: "host"
    volumes:
      - "./developer/redis :/data"

  # Databases
  mongo:
    image: mongo
    environment:
      MONGODB_DATABASE: gobarber
    ports:
      - "27017:27017"
    volumes:
      - "./developer/mongodb:/data/db"
    network_mode: "host"

  postgres:
    image: postgres:11
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
    ports:
      - "5432:5432"
    volumes:
      - "./developer/postgres_data:/var/lib/postgresql/data"
    tty: true
    stdin_open: true
